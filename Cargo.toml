[package]
name = "oranda"
description = "üéÅ generate beautiful landing pages for your projects"
repository = "https://github.com/axodotdev/oranda"
homepage = "https://opensource.axo.dev/oranda"
version = "0.6.5"
edition = "2021"
authors = ["Axo Developer Co. <hello@axo.dev>"]
license = "MIT OR Apache-2.0"

[[bin]]
name = "oranda"

[workspace]
members = ["generate-css"]

[dependencies]
ammonia = "3"
axoasset = { version = "0.4.0", features = ["json-serde", "toml-edit"] }
axocli = "0.1.0"
axoproject = { version = "0.4.6", default-features = false, features = ["cargo-projects", "npm-projects"] }
axum = "0.6.18"
cargo-dist-schema = "=0.1.0-prerelease.4"
chrono = { version = "0.4.30", features = ["serde"] }
clap = { version = "4", features = ["derive", "help", "usage", "error-context", "wrap_help"] }
comrak = "0.17"
console = "0.15.5"
fs_extra = "1.3.0"
lazy_static = "1.4.0"
minifier = "0.2.2"
octolotl = "0.1.1"
reqwest = { version = "0.11.13", default-features = false, features = ["json", "rustls-tls"] }
semver = "1.0.17"
node-semver = "2.1.0"
serde = { version = "1.0.144", features = ["derive"] }
serde_json = { version = "1.0.85" }
serde_yaml = "0.9.21"
syntect = "5.0"
thiserror = "1.0.37"
tokio = { version = "1.20.1", features = ["full"] }
toml = "0.5.9"
tower-http = { version = "0.3.0", features = ["fs", "trace"] }
tower-livereload = "0.8.0"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["fmt"] }
url = "2.3.1"
camino = "1.1.4"
miette = "5.7.0"
futures-util = "0.3.28"
mdbook = { version = "0.4.17", default-features = false, features = ["search"] }
notify-debouncer-mini = "0.3.0"
toml_edit = "0.19.9"
schemars = { version = "0.8.12", features = ["indexmap1"] }
indexmap = { version = "1.9.3", features = ["serde-1"] }
pathdiff = { version = "0.2.1", features = ["camino"] }
minijinja = { version = "1.0.3", features = ["loader", "preserve_order", "custom_syntax"] }
include_dir = "0.7.3"
slug = "0.1.4"
oranda-generate-css = { version = "0.6.5", path = "generate-css" }
inquire = "0.6.2"
url-escape = "0.1.1"
rss = { version = "2.0.6", features = ["atom"] }
gazenot = "0.2.1"

[dev-dependencies]
assert_cmd = "2"
assert_fs = "1.0.7"
insta = { version = "1.31.0", features = ["filters"] }
glob = "0.3.1"
scraper = "0.17.1"

[build-dependencies]
oranda-generate-css = { version = "0.6.1", path = "generate-css" }
tokio = { version = "1.20.1", features = ["full"] }

[features]
build-with-tailwind = []

[profile.test]
debug-assertions = false

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'dist'
[workspace.metadata.dist]
# The preferred dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.26.0-prerelease.3"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "powershell", "npm", "homebrew"]
# A GitHub repo to push Homebrew formulas to
tap = "axodotdev/homebrew-tap"
# Publish jobs to run in CI
publish-jobs = ["homebrew", "npm", "./publish-crates"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "aarch64-unknown-linux-gnu", "aarch64-unknown-linux-musl", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-unknown-linux-musl", "x86_64-pc-windows-msvc"]
# The archive format to use for windows builds (defaults .zip)
windows-archive = ".tar.gz"
# The archive format to use for non-windows builds (defaults .tar.xz)
unix-archive = ".tar.gz"
# A namespace to use when publishing this package to the npm registry
npm-scope = "@axodotdev"
# Features to pass to cargo build
features = ["build-with-tailwind"]
# Which actions to run on pull requests
pr-run-mode = "plan"
# Where to host releases
hosting = ["axodotdev", "github"]
# Whether to install an updater program
install-updater = false
# Whether to enable GitHub Attestations
github-attestations = true
# Path that installers should place binaries in
install-path = "CARGO_HOME"

[[workspace.metadata.dist.extra-artifacts]]
artifacts = ["oranda-config-schema.json"]
build = ["cargo", "run", "--", "config-schema", "--output=oranda-config-schema.json"]

[[workspace.metadata.dist.extra-artifacts]]
artifacts = ["oranda-css/dist/oranda.css"]
build = ["cargo", "run", "--", "generate-css"]

[dist.github-custom-runners.aarch64-unknown-linux-gnu.container]
image = "quay.io/pypa/manylinux_2_28_x86_64"
host = "x86_64-unknown-linux-musl"

[dist.github-custom-runners.aarch64-unknown-linux-musl.container]
image = "quay.io/pypa/manylinux_2_28_x86_64"
host = "x86_64-unknown-linux-musl"
